///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Benchmark
//
//  An object that stores snapshots of a benchmark test.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) Project Firestorm 2018
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "stdafx.h"
#include "Benchmark.h"
#include <libCore/Logger.h>
#include <iomanip>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

OPEN_NAMESPACE(Firestorm);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Benchmark::Benchmark(const String& name, size_t numRuns, size_t index)
: _name(name)
, _numRuns(numRuns)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Benchmark::~Benchmark()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Benchmark::Run(Function<void(Benchmark&)> op)
{
	for(size_t i = 0; i < _numRuns; ++i)
	{
		op(*this);
	}
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Benchmark::Report()
{
	size_t widest = 0;
	for(auto result : _snapshotResults)
	{
		if(result.Name.size() > widest)
			widest = result.Name.size();
	}

	FIRE_LOG_DEBUG("===== Time Averages Over %d Runs (In Seconds) =====", _numRuns);

	for(auto result : _snapshotResults)
	{
		size_t diff = widest - result.Name.size();
		String spacePadding;
		for(size_t i = 0; i < diff; ++i)
		{
			spacePadding.push_back(' ');
		}

		double total = 0;
		for(size_t i = 0; i < result.Results.size(); ++i)
		{
			total += result.Results[i];
		}
		FIRE_LOG_DEBUG("%f%f%s%s = %d", std::fixed, std::setprecision(10), result.Name, spacePadding, total / _numRuns);
	}
	FIRE_LOG_DEBUG("");
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CLOSE_NAMESPACE(Firestorm);