///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  Engine.h
//
//  An object that holds a number of Systems.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) Project Elflord 2018
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef LIBEXISTENCE_ENGINE_H_
#define LIBEXISTENCE_ENGINE_H_
#pragma once

OPEN_NAMESPACE(Elf);

class System;
class Entity;

class Engine : public Mirror::Object
{
public:
private:
	vector< shared_ptr<System> > m_systems;
	vector< shared_ptr<Entity> > m_entities;
};

CLOSE_NAMESPACE(Elf);
#endif