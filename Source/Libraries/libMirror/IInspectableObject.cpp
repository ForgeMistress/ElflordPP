////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  IInspectableObject.cpp
//
//
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "stdafx.h"
#include "IInspectableObject.h"

OPEN_NAMESPACE(Firestorm);
OPEN_NAMESPACE(Mirror);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FIRE_MIRROR_DEFINE(Firestorm::Mirror::IInspectableObject)
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void* IInspectableObject::Inspect(Type type)
{
	return DoInspect(type);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void* IInspectableObject::DoInspect(Type type)
{
	if(IInspectableObject::MyType() == type)
		return static_cast<IInspectableObject*>(this);
	return nullptr;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CLOSE_NAMESPACE(Mirror);
CLOSE_NAMESPACE(Firestorm);