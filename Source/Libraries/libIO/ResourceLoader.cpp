///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  ResourceLoader
//
//  The base class for a resource loader.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  Copyright (c) Project Firestorm 2018
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "stdafx.h"
#include "ResourceLoader.h"
#include "ResourceIOErrors.h"
#include "IResourceObject.h"

OPEN_NAMESPACE(Firestorm);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ResourceLoader::LoadResult::LoadResult()
: _resource(nullptr)
, _error(nullptr)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ResourceLoader::LoadResult::LoadResult(ResourcePtr&& resource)
: _resource(std::move(resource))
, _error(nullptr)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ResourceLoader::LoadResult::LoadResult(const Error& error)
: _resource(nullptr)
, _error(error)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Error ResourceLoader::LoadResult::GetError() const
{
	return _error;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool ResourceLoader::LoadResult::HasError() const
{
	return _error.GetCode() != nullptr;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ResourceLoader::ResourceLoader()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ResourceLoader::~ResourceLoader()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ResourceLoader::LoadResult ResourceLoader::Load(ResourceMgr*,const ResourceReference&)
{
	return LoadResult(ResourceIOErrors::DEFAULT_LOADER);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CLOSE_NAMESPACE(Firestorm);