///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  SOA
//
//  A generalized Structure of Arrays.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) Project Elflord 2018
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "stdafx.h"
#include "SOA.h"

OPEN_NAMESPACE(Firestorm);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////







/*ComponentManagerHashBase::ComponentManagerHashBase();

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ComponentManagerHashBase::~ComponentManagerHashBase();

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

size_t GetIndexForEntity(const Entity& entity);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void Allocate(size_t size);*/

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*FIRE_MIRROR_DEFINE(Firestorm::IComponent)
{
	Class
		.property("name", &Component::GetName, &Component::SetName);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

IComponent::IComponent()
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

IComponent::~IComponent()
{
}*/

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

CLOSE_NAMESPACE(Firestorm);
