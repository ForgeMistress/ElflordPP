///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  ObjectMaker
//
//  Implements a factory for objects.
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) Project Elflord 2018
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#ifndef LIBAPP_OBJECTMAKER_H_
#define LIBAPP_OBJECTMAKER_H_
#pragma once

OPEN_NAMESPACE(Firestorm);

class ObjectMaker final
{
public:
	ObjectMaker();
	~ObjectMaker();

	template<class T>
	T* Make()
	{
		return reinterpret_cast<T*>(Make(T::MyType()));
	}

	void* Make(Mirror::Type type);

private:
};

CLOSE_NAMESPACE(Firestorm);

#endif

