<?xml version="1.0" encoding="UTF-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\main.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\test_misc.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\array_range_test.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\string_view_test.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\enum_flags_test.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\library_test.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_access_level_test.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_misc_test.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_class_inheritance.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_class_invoke_wrapper.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_member_function.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_member_object.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_global_function.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_global_object.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\type\test_type.cpp">
      <Filter>type</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\type\test_type_names.cpp">
      <Filter>type</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\type\type_prop_meth_invoke.cpp">
      <Filter>type</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\destructor\destructor_invoke_test.cpp">
      <Filter>destructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\destructor\destructor_misc_test.cpp">
      <Filter>destructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_access_level_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_default_arg_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_param_info_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_retrieve_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_invoke_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_misc_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_query_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\enumeration\enumeration_conversion.cpp">
      <Filter>enumeration</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\enumeration\enumeration_misc.cpp">
      <Filter>enumeration</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\instance\instance_test.cpp">
      <Filter>instance</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_invoke_defaults_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_access_level_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\test_method_reflection.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_default_arg_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_misc_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_invoke_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_param_info_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_query_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_assign_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_ctor_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_equal_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_less_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_greater_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_less_or_equal.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_greater_or_equal.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_misc_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cast_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_bool.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_int8.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_int16.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_int32.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_int64.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_uint8.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_uint16.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_uint32.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_uint64.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_double.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_float.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_string.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_enum.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant_associative_view\variant_associative_view_test.cpp">
      <Filter>variant_associative_view</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant_sequential_view\variant_sequential_view_test.cpp">
      <Filter>variant_sequential_view</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\test_classes.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\test_method_reflection.h">
      <Filter>method</Filter>
    </ClInclude>
    <ClInclude Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\type\test_type.h">
      <Filter>type</Filter>
    </ClInclude>
    <ClInclude Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\test_enums.h">
      <Filter>variant</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\CMakeLists.txt" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\x86\src\unit_tests\version.rc">
      <Filter>Generated Files</Filter>
    </ResourceCompile>
  </ItemGroup>
  <ItemGroup>
    <Filter Include="Source Files">
      <UniqueIdentifier>{0094064F-3565-3EF4-A73A-FE16DF4E0097}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files">
      <UniqueIdentifier>{0A972810-BEDD-3CC0-AC22-17493ABB6FD3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Generated Files">
      <UniqueIdentifier>{351C0558-6882-3E94-93C9-4380F979C3B4}</UniqueIdentifier>
    </Filter>
    <Filter Include="method">
      <UniqueIdentifier>{49802429-C8EC-398E-97F8-FE173E5D427A}</UniqueIdentifier>
    </Filter>
    <Filter Include="type">
      <UniqueIdentifier>{77AC61F3-01CC-37D5-A888-B2C9583BD2A8}</UniqueIdentifier>
    </Filter>
    <Filter Include="variant">
      <UniqueIdentifier>{3D611BDD-4404-3D67-8192-C268692F7968}</UniqueIdentifier>
    </Filter>
    <Filter Include="misc">
      <UniqueIdentifier>{239B6D79-21E9-3A0D-BDF1-9E4296F5EE38}</UniqueIdentifier>
    </Filter>
    <Filter Include="property">
      <UniqueIdentifier>{91466765-DD9A-3012-98C1-FED2E503F46D}</UniqueIdentifier>
    </Filter>
    <Filter Include="destructor">
      <UniqueIdentifier>{4E638DAE-935D-38F7-9674-DD84452EFB5D}</UniqueIdentifier>
    </Filter>
    <Filter Include="constructor">
      <UniqueIdentifier>{28848EF0-26DB-30F6-8C8E-56A02001C602}</UniqueIdentifier>
    </Filter>
    <Filter Include="enumeration">
      <UniqueIdentifier>{3765D62A-8EC2-35CD-9CF2-75261D26F355}</UniqueIdentifier>
    </Filter>
    <Filter Include="instance">
      <UniqueIdentifier>{2860BC54-81C1-301E-8CEA-E55B17A1C95E}</UniqueIdentifier>
    </Filter>
    <Filter Include="variant_associative_view">
      <UniqueIdentifier>{3CDF33DA-B0F0-3B19-9342-C7204B468124}</UniqueIdentifier>
    </Filter>
    <Filter Include="variant_sequential_view">
      <UniqueIdentifier>{004B831A-328D-320C-93BC-E19C822A8D85}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
</Project>
