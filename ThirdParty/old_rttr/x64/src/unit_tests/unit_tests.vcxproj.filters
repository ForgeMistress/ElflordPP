<?xml version="1.0" encoding="UTF-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\main.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\test_misc.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\array_range_test.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\string_view_test.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\enum_flags_test.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\misc\library_test.cpp">
      <Filter>misc</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_access_level_test.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_misc_test.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_class_inheritance.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_class_invoke_wrapper.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_member_function.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_member_object.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_global_function.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\property\property_global_object.cpp">
      <Filter>property</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\type\test_type.cpp">
      <Filter>type</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\type\test_type_names.cpp">
      <Filter>type</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\type\type_prop_meth_invoke.cpp">
      <Filter>type</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\destructor\destructor_invoke_test.cpp">
      <Filter>destructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\destructor\destructor_misc_test.cpp">
      <Filter>destructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_access_level_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_default_arg_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_param_info_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_retrieve_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_invoke_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_misc_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\constructor\constructor_query_test.cpp">
      <Filter>constructor</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\enumeration\enumeration_conversion.cpp">
      <Filter>enumeration</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\enumeration\enumeration_misc.cpp">
      <Filter>enumeration</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\instance\instance_test.cpp">
      <Filter>instance</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_invoke_defaults_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_access_level_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\test_method_reflection.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_default_arg_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_misc_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_invoke_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_param_info_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\method_query_test.cpp">
      <Filter>method</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_assign_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_ctor_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_equal_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_less_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_greater_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_less_or_equal.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cmp_greater_or_equal.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_misc_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_cast_test.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_bool.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_int8.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_int16.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_int32.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_int64.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_uint8.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_uint16.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_uint32.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_uint64.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_double.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_float.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_string.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\variant_conv_to_enum.cpp">
      <Filter>variant</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant_associative_view\variant_associative_view_test.cpp">
      <Filter>variant_associative_view</Filter>
    </ClCompile>
    <ClCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant_sequential_view\variant_sequential_view_test.cpp">
      <Filter>variant_sequential_view</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\test_classes.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\method\test_method_reflection.h">
      <Filter>method</Filter>
    </ClInclude>
    <ClInclude Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\type\test_type.h">
      <Filter>type</Filter>
    </ClInclude>
    <ClInclude Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\variant\test_enums.h">
      <Filter>variant</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\src\unit_tests\CMakeLists.txt" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="E:\Projects\ElflordPP.git\ThirdParty\rttr\x64\src\unit_tests\version.rc">
      <Filter>Generated Files</Filter>
    </ResourceCompile>
  </ItemGroup>
  <ItemGroup>
    <Filter Include="Source Files">
      <UniqueIdentifier>{E091F4C7-F628-3A29-846E-ED5793D5AB3E}</UniqueIdentifier>
    </Filter>
    <Filter Include="Header Files">
      <UniqueIdentifier>{79374909-D7B3-3BF4-B8FF-EE33520A27BD}</UniqueIdentifier>
    </Filter>
    <Filter Include="Generated Files">
      <UniqueIdentifier>{5A55E1B9-9C21-3379-8D6F-47E635540CEC}</UniqueIdentifier>
    </Filter>
    <Filter Include="method">
      <UniqueIdentifier>{1B436411-EC3A-32C9-8631-616EB12F2120}</UniqueIdentifier>
    </Filter>
    <Filter Include="type">
      <UniqueIdentifier>{B2BEC9F2-3895-3CB8-96BB-75C7C67F0B1A}</UniqueIdentifier>
    </Filter>
    <Filter Include="variant">
      <UniqueIdentifier>{02BE056F-5985-3D6D-B4FD-C84183551EAD}</UniqueIdentifier>
    </Filter>
    <Filter Include="misc">
      <UniqueIdentifier>{7229BCF8-09EF-3D34-89BA-F119D2AE3D30}</UniqueIdentifier>
    </Filter>
    <Filter Include="property">
      <UniqueIdentifier>{E0968D91-D1DD-3DA0-889F-E4A79A1C9B26}</UniqueIdentifier>
    </Filter>
    <Filter Include="destructor">
      <UniqueIdentifier>{DD39F56C-F723-3FC9-9509-ED54EEE6F1DF}</UniqueIdentifier>
    </Filter>
    <Filter Include="constructor">
      <UniqueIdentifier>{61C6EBF1-9F71-31CB-87E0-CC613BC908FE}</UniqueIdentifier>
    </Filter>
    <Filter Include="enumeration">
      <UniqueIdentifier>{82D0569D-8D85-30F9-B285-CDDC3E3A2ACE}</UniqueIdentifier>
    </Filter>
    <Filter Include="instance">
      <UniqueIdentifier>{53288774-38AA-3E88-8DC5-9C7663DED301}</UniqueIdentifier>
    </Filter>
    <Filter Include="variant_associative_view">
      <UniqueIdentifier>{DF465A1A-542D-3A83-9B14-86FF8CAD7D4F}</UniqueIdentifier>
    </Filter>
    <Filter Include="variant_sequential_view">
      <UniqueIdentifier>{A3EC4E41-4829-3A2C-AD0C-EAF096DCFA68}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
</Project>
